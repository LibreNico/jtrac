<?xml version="1.0" encoding="UTF-8"?>
<project name="jtrac" basedir=".">
    
    <!-- example build.properties    
    tomcat.home=C:/apache-tomcat-5.5.16 [optional, jetty used by default]
    jmeter.home=C:/jakarta-jmeter-2.2 [optional, for load testing]
    findbugs.home=C:/peter/opt/findbugs-1.3.1 [optional, for running findbugs]
    maven.repo.local=D:/repo
    -->
    
    <property file="build.properties"/>    
    <property name="war.name" value="jtrac"/>    
    
    <!-- ========================= MAVEN ============================ -->
    
    <target name="mvn-init" unless="mvn.inited" xmlns:artifact="urn:maven-artifact-ant">  
        <property name="mvn.inited" value="true"/>
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant" 
            classpath="etc/maven-ant-tasks.jar"/>
        <condition property="maven.repo.local" value="${maven.repo.local}" else="${user.home}/.m2/repository">
            <isset property="maven.repo.local"/>
        </condition>
        <echo>using maven local repo: ${maven.repo.local}</echo>
        <artifact:localRepository id="local.repository" path="${maven.repo.local}"/> 
        <artifact:pom file="pom.xml" id="maven.project"/>
        <artifact:dependencies pathId="compile.classpath" filesetId="compile.fileset" useScope="compile">
            <pom refid="maven.project"/>
            <localRepository refid="local.repository"/>
        </artifact:dependencies>
        <artifact:dependencies pathId="test.classpath" filesetId="test.fileset" useScope="test">
            <pom refid="maven.project"/>
            <localRepository refid="local.repository"/>
        </artifact:dependencies>
        <artifact:dependencies pathId="runtime.classpath" filesetId="runtime.fileset" useScope="runtime">
            <pom refid="maven.project"/>
            <localRepository refid="local.repository"/>
        </artifact:dependencies>
    </target>
    
    <!-- ============================= BUILD =============================== -->    
    
    <target name="clean">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="target"/>
        </delete>      
    </target>
    
    <target name="clean-db">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="home">
                <exclude name="jtrac.properties"/>
            </fileset>
        </delete>        
    </target>    
    
    <target name="compile" depends="mvn-init">
        <mkdir dir="target/classes"/>
        <property name="debug" value="true"/>
        <!-- 
        <condition property="debug" value="false" else="true">            
            <isset property="production.mode"/>
        </condition>
        -->
        <javac srcdir="src/main/java" destdir="target/classes" debug="${debug}" classpathref="compile.classpath" target="1.5">
            <!-- <compilerarg value="-Xlint:unchecked"/> -->
            <compilerarg value="-Xlint:deprecation"/>
        </javac>
        <copy todir="target/classes">
            <fileset dir="src/main/java" includes="**/*.html"/>
        </copy>         
        <copy todir="target/classes">
            <fileset dir="src/main/resources"/>
        </copy>              
    </target>           
    
    <target name="war-exploded" depends="compile">
        <war-exploded/>        
    </target> 
    
    <target name="war-exploded-tomcat" depends="compile">
        <war-exploded deployDir="${tomcat.home}/webapps/${war.name}"/>
    </target>    
    
    <macrodef name="war-exploded">
        <attribute name="deployDir" default="target/${war.name}"/>
        <sequential>
           <copy todir="@{deployDir}">
               <fileset dir="src/main/webapp"/>
           </copy>
           <copy todir="@{deployDir}/WEB-INF/classes">
               <fileset dir="target/classes"/>
           </copy>
           <copy todir="@{deployDir}/WEB-INF/lib" flatten="true">
               <fileset refid="runtime.fileset"/>
           </copy>
        </sequential>
    </macrodef>
    
    <!-- ========================= HIBERNATE =========================== -->

    <target name="hbm-export" depends="compile">
        <input message="Hibernate Dialect:" addproperty="dialect"/>
        <java classname="org.hibernate.tool.hbm2ddl.SchemaExport" fork="true">
            <classpath>                
                <path path="target/classes"/>  
                <path refid="test.classpath"/>
            </classpath>            
            <jvmarg value="-Dhibernate.dialect=${dialect}"/>
            <arg value="--text"/>
            <arg value="--delimiter=;"/>
            <arg value="--output=target/schema.sql"/>
            <arg value="src/main/resources/*.hbm.xml"/>
        </java>
    </target>       
    
    <!-- cannot be used when jtrac application is connected -->
    <target name="hsqldb-manager">

        <path id="lib.classpath">
            <fileset dir="C:\workspace\jtrac\target\jtrac\WEB-INF\lib">
                <include name="*.jar"/>
            </fileset>
        </path>

        <java classname="org.hsqldb.util.DatabaseManagerSwing" fork="true" classpathref="lib.classpath" >
            <arg line="-url jdbc:hsqldb:file:${basedir}/home/db/jtrac"/>
        </java>                            
    </target>    
    
    <!-- ========================== DIST ============================ -->
    
    <target name="dist-init">                
        <input message="Release Version:" addproperty="version"/>
        <tstamp/>
        <concat destfile="src/main/resources/jtrac-version.properties">version=${version}${line.separator}timestamp=${DSTAMP}${TSTAMP}
        </concat>
        <property name="production.mode" value="true"/>
    </target>           
    
    <target name="war" depends="war-exploded">        
        <zip destfile="target/${war.name}.war" basedir="target/${war.name}"/>
    </target>
        
    <target name="dist-jtrac" depends="dist-init, war, jetty-setup">
        <copy todir="target/jetty/logs" file="etc/dummy.txt"/>
        <copy todir="target/jetty/work" file="etc/dummy.txt"/>
        <mkdir dir="target/site/doc"/>
        <zip destfile="target/jtrac.zip">
            <zipfileset dir="target" includes="*.war" prefix="jtrac"/>
            <zipfileset dir="target/jetty" prefix="jtrac"/>
            <zipfileset dir="etc" includes="*.bat" prefix="jtrac"/>
            <zipfileset dir="etc" includes="jtrac-hsqldb-to-mysql.bsh" prefix="jtrac/etc"/>
            <zipfileset dir="target/site/doc" prefix="jtrac/doc"/>
            <zipfileset dir="." includes="*.txt" prefix="jtrac"/>
        </zip>         
    </target>
    
    <target name="dist-war-scp" depends="clean, dist-init, war">
        <input message="Please enter password:" addproperty="password"/>
        <scp file="target/jtrac.war" 
            todir="ptrthomas@web.sourceforge.net:/home/groups/j/j-/j-trac/htdocs/files"
            password="${password}" trust="true"/>
    </target>
    
    <target name="dist-doc">
        <ant antfile="doc/build.xml"/>
    </target>
        
    <target name="dist" depends="clean, dist-doc, dist-jtrac, dist-jtrac-src"/>
    
    <target name="dist-site-clean">
        <delete includeemptydirs="true">
            <fileset dir="target/site">
                <exclude name="doc/**"/>
            </fileset>
        </delete>
    </target>       
    
    <target name="dist-jtrac-src">
        <mkdir dir="target"/>
        <zip destfile="target/jtrac-src.zip">
            <zipfileset dir="nbproject" prefix="jtrac/nbproject"/>
            <zipfileset dir="etc" prefix="jtrac/etc"/>
            <zipfileset dir="src" prefix="jtrac/src"/>
            <zipfileset dir="." includes="*.*" prefix="jtrac"/>
        </zip>         
    </target>    
    
    <!-- ========================== TEST ============================ -->
    
    <target name="all" depends="clean, compile-test, checkstyle, test-coverage"/>
    
    <target name="compile-test" depends="compile">
        <mkdir dir="target/test-classes"/>
        <javac srcdir="src/test/java" destdir="target/test-classes" debug="true" target="1.5">
            <classpath>
                <path path="target/classes"/>
                <path refid="test.classpath"/>
            </classpath>
        </javac>
    </target>           
    
    <target name="test-coverage" depends="emma-init, compile-test">    
        <test-macro emmaEnabled="true"/>
        <junitreport todir="target/reports">
            <fileset dir="target/reports">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="target/reports"/>
        </junitreport>        
    </target>
    
    <target name="test" depends="compile-test">
        <test-macro/>     
    </target>
    
    <target name="test-single" depends="compile-test" if="netbeans.home">
        <!-- files property expected from netbeans -->
        <fail unless="files">no files selected!</fail>      
        <test-macro includes="${files}" emmaEnabled="false" excludes="" haltonfailure="true"/>      
    </target> 
    
    <!-- TODO cleanup -->
    <target name="test-debug-single" depends="compile-test" if="netbeans.home">
        <!-- files property expected from netbeans -->
        <fail unless="files">no files selected!</fail>
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="target/home"/>
        </delete>        
        <path id="test-classpath">            
            <path path="target/classes"/>
            <path path="target/test-classes"/>
            <path refid="test.classpath"/>                   
        </path>            
        <nbjpdastart name="${files}" addressproperty="jpda.address" transport="dt_socket">
            <classpath refid="test-classpath"/>
        </nbjpdastart>        
        <junit fork="true" dir="." tempdir="target">
            <classpath refid="test-classpath"/>
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xnoagent"/>
            <jvmarg value="-Djava.compiler=none"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=${jpda.address}"/>
            <formatter type="brief" usefile="false"/>
            <batchtest todir="target/reports">
                <fileset dir="src/test/java" includes="${files}"/>
            </batchtest>
        </junit>                     
    </target>      
    
    <target name="test-single-method" depends="compile-test">
        <input message="enter method name:" addproperty="method.name"/>    
        <path id="test-classpath">            
            <path path="target/classes"/>
            <path path="target/test-classes"/>
            <path refid="test.classpath"/>                    
        </path>         
        <junit fork="true" dir="." tempdir="target">
            <classpath refid="test-classpath"/>
            <jvmarg value="-Dmethod.name=${method.name}"/>
            <formatter type="brief" usefile="false"/>
            <batchtest todir="target/reports">
                <fileset dir="src/test/java" includes="info/jtrac/test/SingleMethodRunnerTestCase.java"/>
            </batchtest>            
        </junit>
    </target>
    
    <target name="emma-init" depends="mvn-init" xmlns:artifact="urn:maven-artifact-ant">
        <artifact:dependencies pathId="emma.classpath">
            <dependency groupId="emma" artifactId="emma" version="2.0.5312"/>
            <dependency groupId="emma" artifactId="emma_ant" version="2.0.5312"/>        
        </artifact:dependencies>
        <taskdef resource="emma_ant.properties" classpathref="emma.classpath"/>
    </target>        
    
    <macrodef name="test-macro">
        <attribute name="includes" default="**/*Test.java"/>
        <attribute name="emmaEnabled" default="false"/>
        <attribute name="excludes" default="**/selenium/**/*"/>
        <attribute name="haltonfailure" default="false"/>
        <sequential>
            <mkdir dir="logs"/>
            <mkdir dir="target/reports"/>
            <emma enabled="@{emmaEnabled}">                    
                <instr instrpath="target/classes" 
                outdir="target/instr-classes" 
                metadatafile="target/metadata.emma" merge="true"/>
            </emma>
            <delete includeemptydirs="true" failonerror="false">
                <fileset dir="target/home"/>
            </delete>            
            <copy file="etc/test.log4j.properties" tofile="target/test-classes/log4j.properties"/>
            <junit fork="true" dir="." tempdir="target" haltonfailure="@{haltonfailure}">
                <classpath>
                    <path path="target/instr-classes"/>
                    <path path="target/classes"/>
                    <path path="target/test-classes"/>
                    <path refid="test.classpath"/>               
                    <path refid="emma.classpath"/>  
                </classpath>
                <jvmarg value="-Demma.coverage.out.file=${basedir}/target/coverage.emma"/>
                <jvmarg value="-Demma.coverage.out.merge=true"/>
                <formatter type="brief" usefile="false"/>
                <formatter type="xml"/>            
                <batchtest todir="target/reports">
                    <fileset dir="src/test/java" includes="@{includes}" excludes="@{excludes}"/>
                </batchtest>
            </junit>
            <emma enabled="@{emmaEnabled}">
                <report sourcepath="src/main/java">
                    <fileset dir="target">
                        <include name="*.emma"/>
                    </fileset>                
                    <html outfile="${basedir}/target/reports/index-coverage.html"/>
                </report>
            </emma>          
        </sequential>
    </macrodef>    
    
    <!-- ======================= CHECKSTYLE ========================= -->   
    
    <target name="checkstyle-init" depends="mvn-init" xmlns:artifact="urn:maven-artifact-ant">
        <artifact:dependencies pathId="checkstyle.classpath">
            <dependency groupId="checkstyle" artifactId="checkstyle" version="4.3"/>                 
        </artifact:dependencies>
        <taskdef resource="checkstyletask.properties" classpathref="checkstyle.classpath"/> 
    </target>                                  
    
    <target name="checkstyle" depends="checkstyle-init">
        <checkstyle-macro/>
        <style 
            in="target/reports/checkstyle.xml" 
            out="target/reports/checkstyle.html" 
            style="etc/checkstyle-noframes-sorted.xsl"/> 
    </target>
    
    <target name="checkstyle-dump" depends="checkstyle">
        <concat>
            <fileset dir="target/reports" includes="checkstyle.txt"/>
        </concat>
    </target>
    
    <target name="checkstyle-single" depends="compile, checkstyle-init">
        <!-- files property expected from netbeans -->
        <fail unless="files">no files selected</fail>
        <checkstyle-macro files="${files}"/>
        <concat>
            <fileset dir="target/reports" includes="checkstyle.txt"/>
        </concat>
    </target>    
    
    <macrodef name="checkstyle-macro">
        <attribute name="files" default="**/*.java,**/*.properties"/>
        <sequential>
            <mkdir dir="target/reports"/>
            <checkstyle config="etc/checkstyle.xml" failOnViolation="false">
                <property key="checkstyle.cache.file" file="target/checkstyle-cache"/>
                <property key="checkstyle.header.file" file="etc/header.txt"/>
                <fileset dir="src/main/java" includes="@{files}"/>
                <!-- <fileset dir="src/main/resources" includes="@{files}"/> -->
                <classpath>
                    <path path="target/classes"/>
                    <path refid="test.classpath"/>
                </classpath>
                <formatter type="xml" toFile="target/reports/checkstyle.xml"/>
                <formatter type="plain" toFile="target/reports/checkstyle.txt"/>
            </checkstyle>            
        </sequential>
    </macrodef> 
    
    <!-- ========================= FINDBUGS ========================= -->        
    
    <target name="findbugs" depends="compile">      
        <java classname="bsh.Interpreter" fork="true" classpathref="test.classpath">            
            <arg line="etc/findbugs-project-gen.bsh"/>
        </java>
        <path id="findbugs.classpath">
            <fileset dir="${findbugs.home}/lib"/>                
        </path>
        <mkdir dir="target/reports"/>
        <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpathref="findbugs.classpath"/>
        <findbugs home="${findbugs.home}" jvmargs="-Xmx512m"
            projectFile="target/jtrac.fbp" output="xml:withMessages" outputFile="target/reports/findbugs.xml"/>                           
    </target>    
    
    <target name="findbugs-console-dump">
        <java classname="bsh.Interpreter" fork="true" classpathref="test.classpath">            
            <arg line="etc/findbugs-console-dump.bsh"/>
        </java>
    </target>        
    
    <!-- =========================== PMD ============================ -->  
    
    <target name="pmd-init" depends="mvn-init" xmlns:artifact="urn:maven-artifact-ant">
        <artifact:dependencies pathId="pmd.classpath">
            <dependency groupId="pmd" artifactId="pmd" version="4.1.1"/>                 
        </artifact:dependencies>        
    </target>      
    
    <target name="pmd" depends="pmd-init">
        <mkdir dir="target/reports"/>
        <java classname="net.sourceforge.pmd.PMD" fork="true" output="target/reports/pmd.xml">
            <classpath>
                <path refid="pmd.classpath"/>
                <path refid="test.classpath"/>
            </classpath>
            <jvmarg value="-Xmx512m"/>
            <arg value="src/main/java"/>
            <arg value="xml"/>
            <arg value="basic,imports,unusedcode"/>            
        </java>
    </target>
    
    <target name="pmd-console-dump">
        <java classname="bsh.Interpreter" fork="true" classpathref="test.classpath">            
            <arg line="etc/pmd-console-dump.bsh"/>
        </java>
    </target>
    
    <target name="pmd-cpd" depends="pmd-init">
        <mkdir dir="target/reports"/>
        <java classname="net.sourceforge.pmd.cpd.CPD" fork="true">
            <classpath>
                <path refid="pmd.classpath"/>
                <path refid="test.classpath"/>
            </classpath>
            <jvmarg value="-Xmx512m"/>
            <arg line="--minimum-tokens 100"/>
            <arg line="--files src/main/java"/>                       
        </java>
    </target>    
    
    <!-- =========================== DOC ============================ -->    
    
    <target name="javadoc">
        <mkdir dir="target/api"/>
        <javadoc destdir="target/api" windowtitle="JTrac" use="true" defaultexcludes="true" breakiterator="true">
            <packageset dir="src/main/java"/>           
            <doctitle><![CDATA[<h1>JTrac API Documentation</h1>]]></doctitle>
            <bottom><![CDATA[<i>JTrac</i> - <a href="http://jtrac.info">http://jtrac.info</a>]]></bottom>
        </javadoc>
    </target>   
    
    <!-- ========================= JETTY ============================ -->    
    
    <target name="confirm">
        <input message="Are you sure?" validargs="y,n" addproperty="input"/>
        <condition property="abort">
            <equals arg1="n" arg2="${input}"/>
        </condition>
        <fail if="abort">User aborted.</fail>       
    </target>
    
    <target name="jetty-setup" depends="war-exploded" xmlns:artifact="urn:maven-artifact-ant">
        <artifact:dependencies filesetId="jetty-fileset">
            <dependency groupId="org.mortbay.jetty" artifactId="jetty" version="6.1.1"/>
        </artifact:dependencies>
        <artifact:dependencies filesetId="jetty-start">
            <dependency groupId="org.mortbay.jetty" artifactId="start" version="6.1.1"/>
        </artifact:dependencies>
        <copy todir="target/jetty/lib" flatten="true">
            <fileset refid="jetty-fileset"/>
        </copy>
        <copy todir="target/jetty" flatten="true">
            <fileset refid="jetty-start"/>
            <mapper type="merge" to="start.jar"/>
        </copy>
        <copy todir="target/jetty/etc">
            <fileset dir="etc">
                <include name="jetty.xml"/>
                <include name="wrapper.conf"/>
                <include name="webdefault.xml"/>
            </fileset>
         </copy>
         <mkdir dir="target/jetty/logs"/>
         <mkdir dir="target/jetty/work"/>
         <antcall target="jetty-setup-dev"/>
    </target>	
   
    <target name="jetty-setup-dev" unless="production.mode">
        <echo>*** making jetty / webapp changes for development mode...</echo>
        <replaceregexp file="target/jetty/etc/webdefault.xml">
            <regexp pattern="(&lt;param-name&gt;useFileMappedBuffer&lt;/param-name&gt;\n.*&lt;param-value&gt;)true(&lt;/param-value&gt;)"/>
            <substitution expression="\1false\2"/>
        </replaceregexp>        
        <replace file="target/${war.name}/WEB-INF/web.xml" 
            token="org.apache.wicket.protocol.http.WicketFilter" 
            value="info.jtrac.wicket.devmode.ReloadingWicketFilter"/>        
        <copy todir="target/${war.name}/WEB-INF" file="etc/log4j.properties" overwrite="true"/>            
    </target>
    
    <target name="jetty-status">
        <condition property="jetty.running">
            <socket server="localhost" port="8080"/>
        </condition>        
    </target>
    
    <target name="jetty-start" depends="jetty-setup">        
        <jetty-start/>
    </target>    
   
    <target name="jetty-stop" depends="jetty-status" if="jetty.running">
        <java jar="target/jetty/start.jar" fork="true" dir="target/jetty">
            <jvmarg value="-DSTOP.PORT=8079"/>
            <jvmarg value="-DSTOP.KEY=jtrac"/>
            <arg value="--stop"/>
        </java>
        <sleep seconds="2"/>
    </target>    
    
    <target name="jetty-start-debug" depends="jetty-setup">
        <jetty-start arg1="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n" arg2="-Xdebug"/>
    </target>   
       
    <target name="jetty-set-production-mode">        
        <property name="production.mode" value="true"/>
    </target>
    
    <target name="jetty-start-production-mode" depends="jetty-set-production-mode, jetty-setup">
        <jetty-start arg1="-Xmx512m" wicketConfig=""/>
    </target>
    
    <macrodef name="jetty-start">
        <attribute name="webapp" default="../${war.name}"/>
        <attribute name="arg1" default=""/>
        <attribute name="arg2" default=""/>
        <attribute name="port" default="2340"/>
        <attribute name="wicketConfig" default="-Dwicket.configuration=DEVELOPMENT"/>
        <sequential>
            <antcall target="jetty-stop"/>
            <java jar="target/jetty/start.jar" fork="true" dir="target/jetty">
                <jvmarg value="-Dfile.encoding=UTF-8"/>
                <jvmarg value="-Djtrac.home=${basedir}/home"/>
                <jvmarg value="-Djtrac.webapp=@{webapp}"/>
                <jvmarg value="@{wicketConfig}"/>
                <jvmarg value="-DSTOP.PORT=8079"/>
                <jvmarg value="-DSTOP.KEY=jtrac"/>
                <jvmarg value="-Djetty.port=@{port}"/>
                <jvmarg value="@{arg1}"/>
                <jvmarg value="@{arg2}"/>
            </java>            
        </sequential>        
    </macrodef>
    
    <!-- ========================= TOMCAT ============================ -->
    
    <target name="tomcat-clean">   
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${tomcat.home}/work/Catalina/localhost/${war.name}"/>
            <fileset dir="${tomcat.home}/webapps/${war.name}"/>                            
        </delete>     
    </target>
    
    <target name="tomcat-clean-all">
        <input message="All tomcat webapps [${tomcat.home}/webapps] will be deleted.  Are you sure?"
            validargs="y,n" addproperty="do.clean"/>
        <condition property="do.abort">
            <equals arg1="n" arg2="${do.clean}"/>
        </condition>
        <fail if="do.abort">aborted by user.</fail>        
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${tomcat.home}/work"/>
            <fileset dir="${tomcat.home}/webapps">
                <exclude name="ROOT/**"/>
            </fileset>
        </delete>   
    </target>
    
    <target name="tomcat-reload" depends="war-exploded-tomcat">
        <touch file="${tomcat.home}/webapps/${war.name}/WEB-INF/web.xml"/>
    </target>
    
    <target name="tomcat-start-debug" depends="war-exploded-tomcat">
        <java jar="${tomcat.home}/bin/bootstrap.jar" fork="true">            
            <jvmarg value="-Dcatalina.home=${tomcat.home}"/>
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"/>
            <jvmarg value="-Dfile.encoding=UTF-8"/>
            <jvmarg value="-Djtrac.home=${basedir}/home"/>           
        </java>
    </target>
    
    <target name="tomcat-stop">
        <java jar="${tomcat.home}/bin/bootstrap.jar" fork="true">
            <jvmarg value="-Dcatalina.home=${tomcat.home}"/>
            <arg value="stop"/>
        </java>
    </target>    
    
    <!-- ========================= SELENIUM ============================ -->
    
    <target name="selenium-start">
        <java classname="org.openqa.selenium.server.SeleniumServer" fork="true" classpathref="test.classpath"/>        
    </target>
    
    <target name="selenium-stop">
        <get src="http://localhost:4444/selenium-server/driver/?cmd=shutDown" dest="target/selenium.txt"/>
    </target>
    
    <!-- =========================== JMETER ============================= -->       
    
    <target name="jmeter-test">
        <taskdef name="jmeter" classname="org.programmerplanet.ant.taskdefs.jmeter.JMeterTask" 
            classpath="${jmeter.home}/extras/ant-jmeter.jar"/>         
        <delete failonerror="false">
            <fileset dir="target/reports" includes="*.jtl"/>
        </delete>
        <jmeter jmeterhome="${jmeter.home}" testplan="src/test/jmeter/jtrac-items.jmx" resultlog="target/reports/jtrac-items.jtl">
            <property name="jmeter.save.saveservice.assertion_results" value="all"/>
            <property name="jmeter.save.saveservice.output_format" value="xml"/>
        </jmeter>
        <xslt in="target/reports/jtrac-items.jtl" out="target/reports/jtrac-items.html"
            style="${jmeter.home}/extras/jmeter-results-report_21.xsl"/>        
    </target>  
    
    <!-- =========================== NETBEANS ============================= -->      
    
    <target if="netbeans.home" name="debug-nb">
        <nbjpdaconnect address="8000" host="localhost" name="debug-nb" transport="dt_socket">          
            <sourcepath>
                <path path="src/main/java"/>                
            </sourcepath>
        </nbjpdaconnect>  
        <nbbrowse url="http://localhost:8080/jtrac"/>
    </target>
    
    <!-- target for NetBeans Profiler on Windows -->
    <target name="jetty-start-profile" depends="jetty-set-production-mode, jetty-setup" if="netbeans.home">
        <property name="nbprof.home" value="${netbeans.home}/../profiler2/lib"/>
        <property name="agent.path" value="${nbprof.home}/deployed/jdk15/windows/profilerinterface.dll=${nbprof.home},5140"/>        
        <jetty-start arg1="-agentpath:${agent.path}" arg2="-Xmx512m" wicketConfig=""/>
    </target>         
              
</project>
